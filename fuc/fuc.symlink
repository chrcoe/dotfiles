# general troubleshooting stuff
strace -ttT <command> # runs strace on a command showing time with microseconds and systime time in each call
strace -ttTp <PID> # connects strace to a running PID showing time with microseconds and systime time in each call
netstat -tulpn # shows numeric (does not resolve names) LISTENING TCP and UDP sockets and displays PID/prog name
netstat -tuapn # shows ALL numeric (does not resolve names) TCP and UDP sockets and displays PID/prog name
# ansible stuff
ansible <group_name> -i inventory/production_bs --vault-password-file ~/.vault_onshift_production -m shell -b -a "supervisorctl status"
ansible schedule_app -i inventory/production_bs -b -m shell -a 'echo 1 > /usr/local/bin/scheduler_app.reset_needed'
# general playbook run (legacy) the -C is check mode ... always run in checkmode first
AWS_PROFILE=<profile> ./Ansible-playbook -i inventory/<env> --vault-password-file ~/.vault_onshift_<stage|production> <playbook file> -e "global_do_install=true" -t <specific tags to call if any> -D -C
# worker "clean sweep"
ansible worker -i inventory/production_bs --become -m shell -a "supervisorctl stop all && sleep 10; pkill -9 -u celery_worker; service pgbouncer stop && sleep 5; service pgbouncer start && supervisorctl start all" #cleansweep
psql -U root -p 6432 pgbouncer # log in as pgbouncer
psql onshift # log in as onshift on schedule-db
select xact_start from pg_stat_activity where xact_start <= now() - interval '6 hours' order by xact_start asc; # lookup transaction starts for pg_stat
postgres@schedule-db00:~/9.6/main/pg_xlog$ ls -lt | tail -n 10 # look at logs for transactions
